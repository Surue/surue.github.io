---
# Front matter comment to ensure Jekyll properly reads file.
---

$base-font-family: "Montserrat",sans-serif;
$content-width:    1200px !default;

$color-dark-blue: #2D3142;
$color-light-blue: #4F5D75;
$color-dark-grey: #BFC0C0;
$color-text: #525252;
$color-light-grey: #F5F5F5;
$color-white: #FFFFFF;
$color-light-orange: #E05215;
$color-dark-orange: #CD4B13;

@import "minima/skins/{{ site.minima.skin | default: 'classic' }}";
@import "minima/initialize";

/**
* GRID
*/

$grid-width: 1200;
$grid__bp--md: 768;
$grid__cols: 12;

.container {
  max-width: $grid-width * 1px;
  margin: 0 auto;
  &--fluid {
    margin: 0;
    max-width: 100%;
  }
  .row {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
  }
  @for $i from 1 through $grid__cols {
    .col-sm-#{$i} {
      flex-basis: (100 / ($grid__cols / $i) ) * 1%;
    }
  }
  @media screen and (min-width: $grid__bp--md * 1px) {
    @for $i from 1 through $grid__cols {
      .col-md-#{$i} {
        box-sizing: border-box;
        flex-basis: (100 / ($grid__cols / $i) ) * 1%;
        padding: 0px 20px;
      }
    }
  }
}

/**
 * Wrapper
 */
.wrapper {
  max-width: calc(#{$content-width} - (#{$spacing-unit}));
  margin-right: auto;
  margin-left: auto;
  padding-right: $spacing-unit / 2;
  padding-left: $spacing-unit / 2;
  @extend %clearfix;

  @media screen and (min-width: $on-large) {
    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));
    padding-right: $spacing-unit;
    padding-left: $spacing-unit;
  }
}

/**
* Page content
*/
.page-content {
  padding: $spacing-unit 0;
  flex: 1 0 auto;
  background: white;
}

/**
 * Site header
 */
.site-header {
  border-bottom: 1px solid $border-color-01;
  min-height: $spacing-unit * 1.865;
  line-height: $base-line-height * $base-font-size * 2.25;

  // Positioning context for the mobile navigation icon
  position: relative;
}

/**
 * Site footer
 */
.site-footer {
  border-top: 1px solid $border-color-01;
  padding: $spacing-unit 0;
  background: $color-light-blue;
}

.post-meta {
	font-size: 12px; 
	color: grey;
	line-height: 1.6;
	margin-bottom: 15px;
}

.post-link {
  display: block;
  @include relative-font-size(1.35);
}


/* Container holding the image and the text */
.image-container {
  position: relative;
  text-align: center;
  color: white;
}

/* Bottom left text */
.image-container .bottom-left {
  position: absolute;
  bottom: 8px;
  left: 16px;
}

/* Top left text */
.image-container .top-left {
  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
  position: absolute;
  top: 8px;
  left: 16px;
}

/* Top right text */
.image-container .top-right {
  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
  position: absolute;
  top: 8px;
  right: 16px;
}

/* Bottom right text */
.image-container .bottom-right {
  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
  position: absolute;
  bottom: 8px;
  right: 16px;
}

/* Centered text */
.image-container .centered {
  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Post */
.post-card {
  box-shadow: 0px 16px 19px 0px rgba(204,204,204,1); 
  margin-bottom: 60px;
}

.post-card-content {
  padding: 15px;
}

.post-card-content p {
  color: $color-text;
}

.post-card-content h4 {
  color: black;
  font-weight: b200;
  font-size: 22px;
  border-bottom: 0px;
  margin-bottom: 0px;
}

.post-card-footer {
  border-top: 1px solid $color-light-grey;
  padding: 15px;
  text-align: center;
  color: $color-dark-grey;
}

.has-text-centered {
  text-align: center;
}

.read-more-button {
  border-radius: 5px;
  background: $color-light-orange;
  color: #FFFFFF;
  text-decoration: none;
  padding: 7px 16px;
}

.read-more-button:hover {
  background: $color-dark-orange;
  color: #BFC0C0;
  text-decoration: none;
}

.read-more-button:visited {
  color: $color-white;
}

.video-wrapper {
  position:relative; 
  padding-top:56.25%;
}

iframe {
  position:absolute; 
  top:0; 
  left:0; 
  width:100%; 
  height:100%;
}

/* Wrap
 * Wrap the content for the sidebar
 */

.wrap {
  position: relative;
  width: 100%;
}

/*
 * Sidebar
 *
 * The sidebar is the drawer, the item we are toggling with our handy hamburger
 * button in the corner of the page.
 *
 * This particular sidebar implementation was inspired by Chris Coyier's
 * "Offcanvas Menu with CSS Target" article, and the checkbox variation from the
 * comments by a reader. It modifies both implementations to continue using the
 * checkbox (no change in URL means no polluted browser history), but this uses
 * `position` for the menu to avoid some potential content reflow issues.
 *
 * Source: http://css-tricks.com/off-canvas-menu-with-css-target/#comment-207504
 */

/* Style and "hide" the sidebar */
.sidebar {
  position: fixed;
  top: 0;
  bottom: 0;
  left: -14rem;
  width: 14rem;
  visibility: visible;
  overflow-y: auto;
  font-family: "PT Sans", Helvetica, Arial, sans-serif;
  font-size: .875rem; /* 15px */
  color: rgba(255,255,255,.6);
  background-color: #202020;
  -webkit-transition: all .3s ease-in-out;
          transition: all .3s ease-in-out;
}
@media (min-width: 30em) {
  .sidebar {
    font-size: .75rem; /* 14px */
  }
}

/* Sidebar content */
.sidebar a {
  font-weight: normal;
  color: #fff;
}
.sidebar-item {
  padding: 1rem;
}
.sidebar-item p:last-child {
  margin-bottom: 0;
}

/* Sidebar nav */
.sidebar-nav {
  border-bottom: 1px solid rgba(255,255,255,.1);
}
.sidebar-nav-item {
  display: block;
  padding: .5rem 1rem;
  border-top: 1px solid rgba(255,255,255,.1);
}
.sidebar-nav-item.active,
a.sidebar-nav-item:hover,
a.sidebar-nav-item:focus {
  text-decoration: none;
  background-color: rgba(255,255,255,.1);
  border-color: transparent;
}

@media (min-width: 48em) {
  .sidebar-item {
    padding: 1.5rem;
  }
  .sidebar-nav-item {
    padding-left:  1.5rem;
    padding-right: 1.5rem;
  }
}

/* Hide the sidebar checkbox that we toggle with `.sidebar-toggle` */
.sidebar-checkbox {
  position: absolute;
  opacity: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

/* Style the `label` that we use to target the `.sidebar-checkbox` */
.sidebar-toggle {
  position: absolute;
  top:  .8rem;
  left: 1rem;
  display: flex;
  align-items: center;
  padding: .25rem .75rem;
  color: #505050;
  background-color: #fff;
  border-radius: .25rem;
  cursor: pointer;
}

.sidebar-toggle::before {
  display: inline-block;
  width: 32px;
  height: 32px;
  content: "";
  background-color: #555;
}

.sidebar-toggle:active,
#sidebar-checkbox:focus ~ .sidebar-toggle,
#sidebar-checkbox:checked ~ .sidebar-toggle {
  color: #fff;
  background-color: #555;
}

.sidebar-toggle:active:before,
#sidebar-checkbox:focus ~ .sidebar-toggle::before,
#sidebar-checkbox:checked ~ .sidebar-toggle::before {
  background-color: #555;
}

@media (min-width: 30.1em) {
  .sidebar-toggle {
    position: fixed;
  }
}

@media print {
  .sidebar-toggle {
    display: none;
  }
}

/* Slide effect
 *
 * Handle the sliding effects of the sidebar and content in one spot, seperate
 * from the default styles.
 *
 * As an a heads up, we don't use `transform: translate3d()` here because when
 * mixed with `position: fixed;` for the sidebar toggle, it creates a new
 * containing block. Put simply, the fixed sidebar toggle behaves like
 * `position: absolute;` when transformed.
 *
 * Read more about it at http://meyerweb.com/eric/thoughts/2011/09/12/.
 */

.wrap,
.sidebar,
.sidebar-toggle {
  -webkit-backface-visibility: hidden;
      -ms-backface-visibility: hidden;
          backface-visibility: hidden;
}
.wrap,
.sidebar-toggle {
  -webkit-transition: -webkit-transform .3s ease-in-out;
          transition: transform .3s ease-in-out;
}

#sidebar-checkbox:checked + .sidebar {
  z-index: 10;
  visibility: visible;
}
#sidebar-checkbox:checked ~ .sidebar,
#sidebar-checkbox:checked ~ .wrap,
#sidebar-checkbox:checked ~ .sidebar-toggle {
  -webkit-transform: translateX(14rem);
      -ms-transform: translateX(14rem);
          transform: translateX(14rem);
}


/*
 * Posts and pages
 *
 * Each post is wrapped in `.post` and is used on default and post layouts. Each
 * page is wrapped in `.page` and is only used on the page layout.
 */